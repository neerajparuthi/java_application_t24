# Maven
# Build your Java project and run tests with Apache Maven.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

trigger:
- none

pool:
  #name: "Self Hosted Pool"
  name: "docker_pool"
  #vmImage: ubuntu-latest

variables:
- group: pipeline_vars
- name: image-tag
  value: $(Build.BuildId)

steps:

# - task: SonarQubePrepare@5
#   inputs:
#     SonarQube: 'sonar-az-con'
#     scannerMode: 'Other'
#     extraProperties: |
#       # Additional properties that will be passed to the scanner, 
#       # Put one key=value per line, example:
#       # sonar.exclusions=**/*.bin
#       sonar.projectKey=CGDevSecOps_CGDevSecOps_AYYNTjUWFzqEK_cmvPCU
#       sonar.projectName=java_application_t24_az
#       sonar.sources=src
#       sonar.java.binaries=target/classes/ 
#       sonar.exclusions=src/test/java/****/*.java
#       sonar.projectVersion=1

- task: SonarQubePrepare@5
  inputs:
    SonarQube: 'sonar-az-con'
    scannerMode: 'Other'
    extraProperties: |
      # Additional properties that will be passed to the scanner,
      # Put one key=value per line, example:
      # sonar.exclusions=**/*.bin
      sonar.projectKey=CGDevSecOps_CGDevSecOps_AYYNTjUWFzqEK_cmvPCU
      sonar.projectName=CGDevSecOps

# - task: JavaToolInstaller@0
#   inputs:
#     versionSpec: '11'
#     jdkArchitectureOption: 'x64'
#     jdkSourceOption: 'PreInstalled'


# - task: Maven@3
#   inputs:
#     mavenPomFile: 'pom.xml'
#     mavenOptions: '-Xmx3072m'
#     #javaHomeOption: 'JDKVersion'
#     #jdkVersionOption: '1.9'
#     #jdkArchitectureOption: 'x64'
#     publishJUnitResults: true
#     testResultsFiles: '**/surefire-reports/TEST-*.xml'
#     goals: 'package'
#     # mavenAuthenticateFeed: false
#     # effectivePomSkip: false
#     # sonarQubeRunAnalysis: true
#     # sqMavenPluginVersionChoice: 'pom'


- task: Maven@4
  inputs:
    mavenPomFile: 'pom.xml'
    publishJUnitResults: true
    testResultsFiles: '**/surefire-reports/TEST-*.xml'
    #javaHomeOption: 'JDKVersion'
    #jdkVersionOption: '1.11'
    mavenVersionOption: 'Default'
    mavenAuthenticateFeed: false
    effectivePomSkip: false
    sonarQubeRunAnalysis: true
    sqMavenPluginVersionChoice: 'latest'

- task: SonarQubePublish@5
  inputs:
    pollingTimeoutSec: '300'

- task: Docker@2
  displayName: 'Docker image build/push'
  inputs:
    containerRegistry: 'dockerhub-AZ'
    repository: 'docker4028/numeric-app'
    command: 'buildandpush'
    Dockerfile: 'Dockerfile'
    tags: $(image-tag)
  
- task: Bash@3
  inputs:
    targetType: 'inline'
    script: |
      # Write your commands here
      
      echo 'Hello world'
      echo 'Current build id is $(buildid)'
      echo 'Image tag is $(image-tag)'

- task: replacetokens@5
  displayName: 'Feeding dynamic variable values in Manifest file'
  inputs:
    rootDirectory: 'k8s-app-manifests/'
    targetFiles: 'numericapp_deployment.yaml'
    encoding: 'auto'
    tokenPattern: 'custom'
    tokenPrefix: '__'
    tokenSuffix: '__'
    writeBOM: true
    actionOnMissing: 'warn'
    keepToken: false
    actionOnNoFiles: 'continue'
    enableTransforms: false
    enableRecursion: false
    useLegacyPattern: false
    enableTelemetry: true

- task: KubernetesManifest@0
  inputs:
    action: 'deploy'
    kubernetesServiceConnection: 'k8s-az-con'
    namespace: 'dev-fargate'
    #namespace: 'default'
    manifests: |
      k8s-app-manifests/numericapp_deployment.yaml
      k8s-app-manifests/numericapp_svc.yaml
    #imagePullSecrets: 'dockerregcredsaz'
    imagePullSecrets: 'dokrregdevops'